name: Java CI with Gradle and Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle dependencies to speed up builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches, ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Set up Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v2

      # Make sure gradlew has execute permissions
      - name: Ensure gradlew has execute permissions
        run: chmod +x ./gradlew

      # Build the application with Gradle
      - name: Build with Gradle Wrapper
        run: ./gradlew build

      # Run tests (optional)
      - name: Run tests with Gradle
        run: ./gradlew test

  docker:
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after the build job

    steps:
      # Checkout the repository again
      - uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Debugging step: List files to confirm Dockerfile location
      - name: Check Dockerfile existence
        run: ls -l

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t sarhadb127/myapp:${{ github.sha }} .
          # Optionally, tag with "latest"
          docker tag sarhadb127/myapp:${{ github.sha }} sarhadb127/myapp:latest

      # Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push sarhadb127/myapp:${{ github.sha }}
          docker push sarhadb127/myapp:latest
